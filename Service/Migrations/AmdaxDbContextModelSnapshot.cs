// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.Repositories.Context;

#nullable disable

namespace Service.Migrations
{
    [DbContext(typeof(AmdaxDbContext))]
    partial class AmdaxDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Applicant", b =>
                {
                    b.Property<Guid>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAtMs")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ExternalUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SumSubApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VerificationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantId");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("Domain.Models.ApplicantReview", b =>
                {
                    b.Property<Guid>("ApplicantReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModerationComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectLabels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewRejectType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantReviewId");

                    b.HasIndex("ApplicantId")
                        .IsUnique();

                    b.ToTable("ApplicantReview");
                });

            modelBuilder.Entity("Domain.Models.ApplicantReview", b =>
                {
                    b.HasOne("Domain.Models.Applicant", "Applicant")
                        .WithOne("ApplicantReview")
                        .HasForeignKey("Domain.Models.ApplicantReview", "ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("Domain.Models.Applicant", b =>
                {
                    b.Navigation("ApplicantReview")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
